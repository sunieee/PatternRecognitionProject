{"mmdet_version": "2.20.0unknown", "CLASSES": ["plane", "baseball-diamond", "bridge", "ground-track-field", "small-vehicle", "large-vehicle", "ship", "tennis-court", "basketball-court", "storage-tank", "soccer-ball-field", "roundabout", "harbor", "swimming-pool", "helicopter"], "env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: GeForce GTX 1080 Ti\nCUDA_HOME: /cluster/apps/cuda/10.1\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 7.3.0\nPyTorch: 1.7.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.0\nOpenCV: 4.5.5\nMMCV: 1.4.3\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMRotate: 0.1.0+unknown", "config": "dataset_type = 'DOTADataset'\ndata_root = '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RResize', img_scale=(1024, 1024)),\n    dict(\n        type='RRandomFlip',\n        flip_ratio=[0.25, 0.25, 0.25],\n        direction=['horizontal', 'vertical', 'diagonal'],\n        version='le90'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 1024),\n        flip=False,\n        transforms=[\n            dict(type='RResize'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DOTADataset',\n        ann_file=\n        '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/trainval/annfiles/',\n        img_prefix=\n        '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/trainval/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='RResize', img_scale=(1024, 1024)),\n            dict(\n                type='RRandomFlip',\n                flip_ratio=[0.25, 0.25, 0.25],\n                direction=['horizontal', 'vertical', 'diagonal'],\n                version='le90'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        version='le90'),\n    val=dict(\n        type='DOTADataset',\n        ann_file=\n        '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/trainval/annfiles/',\n        img_prefix=\n        '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/trainval/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le90'),\n    test=dict(\n        type='DOTADataset',\n        ann_file=\n        '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/test/images/',\n        img_prefix=\n        '/cluster/home/it_stu198/main/datasets/split_1024_dota1_0/test/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le90'))\nevaluation = dict(interval=12, metric='mAP')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=12)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nangle_version = 'le90'\nmodel = dict(\n    type='OrientedRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='OrientedRPNHead',\n        in_channels=256,\n        feat_channels=256,\n        version='le90',\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='MidpointOffsetCoder',\n            angle_range='le90',\n            target_means=[0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0, 0.5, 0.5]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='OrientedStandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='RotatedSingleRoIExtractor',\n            roi_layer=dict(\n                type='RoIAlignRotated',\n                out_size=7,\n                sample_num=2,\n                clockwise=True),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='RotatedShared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=15,\n            bbox_coder=dict(\n                type='DeltaXYWHAOBBoxCoder',\n                angle_range='le90',\n                norm_factor=None,\n                edge_swap=True,\n                proj_xy=True,\n                target_means=(0.0, 0.0, 0.0, 0.0, 0.0),\n                target_stds=(0.1, 0.1, 0.2, 0.2, 0.1)),\n            reg_class_agnostic=True,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.8),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                iou_calculator=dict(type='RBboxOverlaps2D'),\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RRandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.8),\n            min_bbox_size=0),\n        rcnn=dict(\n            nms_pre=2000,\n            min_bbox_size=0,\n            score_thr=0.05,\n            nms=dict(iou_thr=0.1),\n            max_per_img=2000)))\nwork_dir = './work_dirs/oriented_rcnn_r50_fpn_1x_dota_le90'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 518, "exp_name": "oriented_rcnn_r50_fpn_1x_dota_le90.py", "epoch": 12, "iter": 76800, "mmcv_version": "1.4.3", "time": "Thu Jan 27 20:00:07 2022"}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 5e-05, "memory": 3283, "data_time": 0.04935, "loss_rpn_cls": 0.01761, "loss_rpn_bbox": 0.01341, "loss_cls": 0.50113, "acc": 74.44336, "loss_bbox": 0.07706, "loss": 0.60921, "grad_norm": 5.35819, "time": 0.24822}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 5e-05, "memory": 3284, "data_time": 0.00482, "loss_rpn_cls": 0.01429, "loss_rpn_bbox": 0.01592, "loss_cls": 0.27588, "acc": 87.55859, "loss_bbox": 0.07811, "loss": 0.3842, "grad_norm": 2.65847, "time": 0.17525}
{"mode": "train", "epoch": 13, "iter": 150, "lr": 5e-05, "memory": 3284, "data_time": 0.00479, "loss_rpn_cls": 0.02065, "loss_rpn_bbox": 0.01392, "loss_cls": 0.22504, "acc": 89.38867, "loss_bbox": 0.07875, "loss": 0.33837, "grad_norm": 2.50254, "time": 0.17449}
{"mode": "train", "epoch": 13, "iter": 200, "lr": 5e-05, "memory": 3284, "data_time": 0.00486, "loss_rpn_cls": 0.00893, "loss_rpn_bbox": 0.01147, "loss_cls": 0.20463, "acc": 90.95898, "loss_bbox": 0.06861, "loss": 0.29363, "grad_norm": 2.10015, "time": 0.17183}
{"mode": "train", "epoch": 13, "iter": 250, "lr": 5e-05, "memory": 3284, "data_time": 0.00448, "loss_rpn_cls": 0.01637, "loss_rpn_bbox": 0.01688, "loss_cls": 0.19418, "acc": 92.38281, "loss_bbox": 0.08869, "loss": 0.31613, "grad_norm": 2.1792, "time": 0.17244}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 5e-05, "memory": 3284, "data_time": 0.05071, "loss_rpn_cls": 0.01059, "loss_rpn_bbox": 0.0115, "loss_cls": 0.15704, "acc": 95.45898, "loss_bbox": 0.07401, "loss": 0.25313, "grad_norm": 1.86721, "time": 0.22153}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 5e-05, "memory": 3284, "data_time": 0.0048, "loss_rpn_cls": 0.01104, "loss_rpn_bbox": 0.0142, "loss_cls": 0.15183, "acc": 95.85938, "loss_bbox": 0.07625, "loss": 0.25331, "grad_norm": 1.79681, "time": 0.17295}
{"mode": "train", "epoch": 14, "iter": 150, "lr": 5e-05, "memory": 3284, "data_time": 0.00493, "loss_rpn_cls": 0.01548, "loss_rpn_bbox": 0.01262, "loss_cls": 0.1407, "acc": 96.15039, "loss_bbox": 0.07825, "loss": 0.24705, "grad_norm": 1.9863, "time": 0.17416}
{"mode": "train", "epoch": 14, "iter": 200, "lr": 5e-05, "memory": 3284, "data_time": 0.00526, "loss_rpn_cls": 0.00621, "loss_rpn_bbox": 0.0103, "loss_cls": 0.13326, "acc": 96.4375, "loss_bbox": 0.06587, "loss": 0.21565, "grad_norm": 1.58952, "time": 0.17548}
{"mode": "train", "epoch": 14, "iter": 250, "lr": 5e-05, "memory": 3284, "data_time": 0.00494, "loss_rpn_cls": 0.01324, "loss_rpn_bbox": 0.01548, "loss_cls": 0.13146, "acc": 96.56445, "loss_bbox": 0.08754, "loss": 0.24772, "grad_norm": 1.89104, "time": 0.17467}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 5e-05, "memory": 3284, "data_time": 0.0503, "loss_rpn_cls": 0.00881, "loss_rpn_bbox": 0.01092, "loss_cls": 0.11403, "acc": 97.03711, "loss_bbox": 0.07295, "loss": 0.20672, "grad_norm": 1.68717, "time": 0.21951}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 5e-05, "memory": 3284, "data_time": 0.00491, "loss_rpn_cls": 0.01013, "loss_rpn_bbox": 0.01355, "loss_cls": 0.11359, "acc": 97.00586, "loss_bbox": 0.0743, "loss": 0.21157, "grad_norm": 1.65401, "time": 0.17335}
{"mode": "train", "epoch": 15, "iter": 150, "lr": 5e-05, "memory": 3284, "data_time": 0.00528, "loss_rpn_cls": 0.01369, "loss_rpn_bbox": 0.01197, "loss_cls": 0.10794, "acc": 97.07812, "loss_bbox": 0.07567, "loss": 0.20927, "grad_norm": 1.83126, "time": 0.17557}
{"mode": "train", "epoch": 15, "iter": 200, "lr": 5e-05, "memory": 3284, "data_time": 0.00485, "loss_rpn_cls": 0.00519, "loss_rpn_bbox": 0.00979, "loss_cls": 0.10286, "acc": 97.41016, "loss_bbox": 0.0653, "loss": 0.18315, "grad_norm": 1.47308, "time": 0.17374}
{"mode": "train", "epoch": 15, "iter": 250, "lr": 5e-05, "memory": 3284, "data_time": 0.00488, "loss_rpn_cls": 0.01064, "loss_rpn_bbox": 0.0147, "loss_cls": 0.10474, "acc": 97.19531, "loss_bbox": 0.08549, "loss": 0.21558, "grad_norm": 1.7587, "time": 0.1734}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 5e-05, "memory": 3286, "data_time": 0.04985, "loss_rpn_cls": 0.00712, "loss_rpn_bbox": 0.01058, "loss_cls": 0.09306, "acc": 97.60742, "loss_bbox": 0.07226, "loss": 0.18302, "grad_norm": 1.55744, "time": 0.21951}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 5e-05, "memory": 3286, "data_time": 0.00449, "loss_rpn_cls": 0.00975, "loss_rpn_bbox": 0.01312, "loss_cls": 0.0957, "acc": 97.41211, "loss_bbox": 0.07334, "loss": 0.19191, "grad_norm": 1.59926, "time": 0.17246}
{"mode": "train", "epoch": 16, "iter": 150, "lr": 5e-05, "memory": 3286, "data_time": 0.00476, "loss_rpn_cls": 0.01223, "loss_rpn_bbox": 0.01151, "loss_cls": 0.09186, "acc": 97.38281, "loss_bbox": 0.07466, "loss": 0.19026, "grad_norm": 1.71354, "time": 0.17369}
{"mode": "train", "epoch": 16, "iter": 200, "lr": 5e-05, "memory": 3286, "data_time": 0.00563, "loss_rpn_cls": 0.00488, "loss_rpn_bbox": 0.00947, "loss_cls": 0.08823, "acc": 97.60547, "loss_bbox": 0.06438, "loss": 0.16695, "grad_norm": 1.39995, "time": 0.17705}
{"mode": "train", "epoch": 16, "iter": 250, "lr": 5e-05, "memory": 3286, "data_time": 0.00468, "loss_rpn_cls": 0.01021, "loss_rpn_bbox": 0.0142, "loss_cls": 0.08988, "acc": 97.48047, "loss_bbox": 0.08334, "loss": 0.19762, "grad_norm": 1.65831, "time": 0.17462}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 5e-05, "memory": 3286, "data_time": 0.04968, "loss_rpn_cls": 0.00752, "loss_rpn_bbox": 0.01034, "loss_cls": 0.08238, "acc": 97.73633, "loss_bbox": 0.071, "loss": 0.17125, "grad_norm": 1.53441, "time": 0.21814}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 5e-05, "memory": 3286, "data_time": 0.00589, "loss_rpn_cls": 0.00832, "loss_rpn_bbox": 0.01276, "loss_cls": 0.08496, "acc": 97.67578, "loss_bbox": 0.07183, "loss": 0.17788, "grad_norm": 1.58067, "time": 0.17746}
{"mode": "train", "epoch": 17, "iter": 150, "lr": 5e-05, "memory": 3286, "data_time": 0.00556, "loss_rpn_cls": 0.0102, "loss_rpn_bbox": 0.01115, "loss_cls": 0.08026, "acc": 97.64844, "loss_bbox": 0.07371, "loss": 0.17531, "grad_norm": 1.6162, "time": 0.17368}
{"mode": "train", "epoch": 17, "iter": 200, "lr": 5e-05, "memory": 3286, "data_time": 0.00458, "loss_rpn_cls": 0.00402, "loss_rpn_bbox": 0.0092, "loss_cls": 0.07869, "acc": 97.83203, "loss_bbox": 0.06305, "loss": 0.15496, "grad_norm": 1.3601, "time": 0.17277}
{"mode": "train", "epoch": 17, "iter": 250, "lr": 5e-05, "memory": 3286, "data_time": 0.00509, "loss_rpn_cls": 0.00776, "loss_rpn_bbox": 0.01379, "loss_cls": 0.08396, "acc": 97.46875, "loss_bbox": 0.08194, "loss": 0.18745, "grad_norm": 1.59361, "time": 0.17902}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 5e-05, "memory": 3286, "data_time": 0.05013, "loss_rpn_cls": 0.00663, "loss_rpn_bbox": 0.01014, "loss_cls": 0.07462, "acc": 97.86914, "loss_bbox": 0.06983, "loss": 0.16121, "grad_norm": 1.50115, "time": 0.22206}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 5e-05, "memory": 3286, "data_time": 0.00519, "loss_rpn_cls": 0.00836, "loss_rpn_bbox": 0.01248, "loss_cls": 0.07769, "acc": 97.81445, "loss_bbox": 0.0708, "loss": 0.16933, "grad_norm": 1.5585, "time": 0.17625}
{"mode": "train", "epoch": 18, "iter": 150, "lr": 5e-05, "memory": 3286, "data_time": 0.00516, "loss_rpn_cls": 0.00966, "loss_rpn_bbox": 0.01085, "loss_cls": 0.07358, "acc": 97.78125, "loss_bbox": 0.07267, "loss": 0.16677, "grad_norm": 1.54329, "time": 0.17562}
{"mode": "train", "epoch": 18, "iter": 200, "lr": 5e-05, "memory": 3286, "data_time": 0.00458, "loss_rpn_cls": 0.00482, "loss_rpn_bbox": 0.00898, "loss_cls": 0.07051, "acc": 97.97656, "loss_bbox": 0.06188, "loss": 0.1462, "grad_norm": 1.34244, "time": 0.17464}
{"mode": "train", "epoch": 18, "iter": 250, "lr": 5e-05, "memory": 3286, "data_time": 0.0062, "loss_rpn_cls": 0.00784, "loss_rpn_bbox": 0.01346, "loss_cls": 0.07617, "acc": 97.7832, "loss_bbox": 0.08154, "loss": 0.17902, "grad_norm": 1.57048, "time": 0.17751}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 5e-05, "memory": 3286, "data_time": 0.05037, "loss_rpn_cls": 0.00626, "loss_rpn_bbox": 0.00996, "loss_cls": 0.06914, "acc": 98.05859, "loss_bbox": 0.06891, "loss": 0.15427, "grad_norm": 1.48949, "time": 0.22282}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 5e-05, "memory": 3286, "data_time": 0.00587, "loss_rpn_cls": 0.00711, "loss_rpn_bbox": 0.01223, "loss_cls": 0.07296, "acc": 97.95312, "loss_bbox": 0.07014, "loss": 0.16244, "grad_norm": 1.52063, "time": 0.17755}
{"mode": "train", "epoch": 19, "iter": 150, "lr": 5e-05, "memory": 3286, "data_time": 0.00478, "loss_rpn_cls": 0.00941, "loss_rpn_bbox": 0.01061, "loss_cls": 0.06899, "acc": 97.89062, "loss_bbox": 0.07123, "loss": 0.16024, "grad_norm": 1.52034, "time": 0.1744}
{"mode": "train", "epoch": 19, "iter": 200, "lr": 5e-05, "memory": 3286, "data_time": 0.0052, "loss_rpn_cls": 0.00349, "loss_rpn_bbox": 0.0088, "loss_cls": 0.06764, "acc": 98.06641, "loss_bbox": 0.06155, "loss": 0.14147, "grad_norm": 1.29747, "time": 0.17555}
{"mode": "train", "epoch": 19, "iter": 250, "lr": 5e-05, "memory": 3286, "data_time": 0.00535, "loss_rpn_cls": 0.00676, "loss_rpn_bbox": 0.01318, "loss_cls": 0.07464, "acc": 97.66797, "loss_bbox": 0.07981, "loss": 0.1744, "grad_norm": 1.56227, "time": 0.17653}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 5e-05, "memory": 3287, "data_time": 0.0503, "loss_rpn_cls": 0.0054, "loss_rpn_bbox": 0.00982, "loss_cls": 0.06631, "acc": 98.00781, "loss_bbox": 0.06761, "loss": 0.14914, "grad_norm": 1.43781, "time": 0.22028}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 5e-05, "memory": 3287, "data_time": 0.00496, "loss_rpn_cls": 0.00666, "loss_rpn_bbox": 0.01203, "loss_cls": 0.06984, "acc": 97.9707, "loss_bbox": 0.0702, "loss": 0.15873, "grad_norm": 1.51706, "time": 0.17466}
{"mode": "train", "epoch": 20, "iter": 150, "lr": 5e-05, "memory": 3287, "data_time": 0.00547, "loss_rpn_cls": 0.00849, "loss_rpn_bbox": 0.0104, "loss_cls": 0.06529, "acc": 97.95117, "loss_bbox": 0.07038, "loss": 0.15455, "grad_norm": 1.5159, "time": 0.17664}
{"mode": "train", "epoch": 20, "iter": 200, "lr": 5e-05, "memory": 3287, "data_time": 0.00483, "loss_rpn_cls": 0.00362, "loss_rpn_bbox": 0.00864, "loss_cls": 0.06312, "acc": 98.16406, "loss_bbox": 0.06288, "loss": 0.13827, "grad_norm": 1.32069, "time": 0.17365}
{"mode": "train", "epoch": 20, "iter": 250, "lr": 5e-05, "memory": 3287, "data_time": 0.00515, "loss_rpn_cls": 0.0056, "loss_rpn_bbox": 0.01293, "loss_cls": 0.07012, "acc": 97.76562, "loss_bbox": 0.0803, "loss": 0.16895, "grad_norm": 1.52634, "time": 0.17605}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 5e-05, "memory": 3287, "data_time": 0.04966, "loss_rpn_cls": 0.00536, "loss_rpn_bbox": 0.00969, "loss_cls": 0.06386, "acc": 98.06055, "loss_bbox": 0.06673, "loss": 0.14564, "grad_norm": 1.42826, "time": 0.21957}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 5e-05, "memory": 3287, "data_time": 0.00546, "loss_rpn_cls": 0.00689, "loss_rpn_bbox": 0.01184, "loss_cls": 0.06627, "acc": 98.02734, "loss_bbox": 0.0696, "loss": 0.1546, "grad_norm": 1.52835, "time": 0.17681}
{"mode": "train", "epoch": 21, "iter": 150, "lr": 5e-05, "memory": 3287, "data_time": 0.00449, "loss_rpn_cls": 0.00778, "loss_rpn_bbox": 0.0102, "loss_cls": 0.06238, "acc": 98.04297, "loss_bbox": 0.06859, "loss": 0.14894, "grad_norm": 1.45001, "time": 0.17447}
{"mode": "train", "epoch": 21, "iter": 200, "lr": 5e-05, "memory": 3287, "data_time": 0.00471, "loss_rpn_cls": 0.00374, "loss_rpn_bbox": 0.0085, "loss_cls": 0.06167, "acc": 98.13281, "loss_bbox": 0.06116, "loss": 0.13508, "grad_norm": 1.28714, "time": 0.17723}
{"mode": "train", "epoch": 21, "iter": 250, "lr": 5e-05, "memory": 3287, "data_time": 0.00524, "loss_rpn_cls": 0.00513, "loss_rpn_bbox": 0.01272, "loss_cls": 0.06847, "acc": 97.83398, "loss_bbox": 0.07904, "loss": 0.16536, "grad_norm": 1.51755, "time": 0.1768}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 5e-05, "memory": 3287, "data_time": 0.05108, "loss_rpn_cls": 0.00464, "loss_rpn_bbox": 0.00957, "loss_cls": 0.06144, "acc": 98.12695, "loss_bbox": 0.06643, "loss": 0.14208, "grad_norm": 1.3968, "time": 0.22535}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 5e-05, "memory": 3287, "data_time": 0.00475, "loss_rpn_cls": 0.00568, "loss_rpn_bbox": 0.01166, "loss_cls": 0.06395, "acc": 98.08789, "loss_bbox": 0.06883, "loss": 0.15012, "grad_norm": 1.51035, "time": 0.17407}
{"mode": "train", "epoch": 22, "iter": 150, "lr": 5e-05, "memory": 3287, "data_time": 0.00428, "loss_rpn_cls": 0.00669, "loss_rpn_bbox": 0.01002, "loss_cls": 0.06021, "acc": 98.12305, "loss_bbox": 0.0692, "loss": 0.14611, "grad_norm": 1.44066, "time": 0.17273}
{"mode": "train", "epoch": 22, "iter": 200, "lr": 5e-05, "memory": 3287, "data_time": 0.00477, "loss_rpn_cls": 0.00304, "loss_rpn_bbox": 0.00838, "loss_cls": 0.05976, "acc": 98.12109, "loss_bbox": 0.05979, "loss": 0.13097, "grad_norm": 1.27669, "time": 0.17451}
{"mode": "train", "epoch": 22, "iter": 250, "lr": 5e-05, "memory": 3287, "data_time": 0.00565, "loss_rpn_cls": 0.00461, "loss_rpn_bbox": 0.01252, "loss_cls": 0.06641, "acc": 97.85352, "loss_bbox": 0.07716, "loss": 0.16071, "grad_norm": 1.49086, "time": 0.17795}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 5e-05, "memory": 3287, "data_time": 0.05099, "loss_rpn_cls": 0.00548, "loss_rpn_bbox": 0.00946, "loss_cls": 0.05863, "acc": 98.24219, "loss_bbox": 0.06514, "loss": 0.13871, "grad_norm": 1.39617, "time": 0.22302}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 5e-05, "memory": 3287, "data_time": 0.00507, "loss_rpn_cls": 0.00527, "loss_rpn_bbox": 0.01152, "loss_cls": 0.06182, "acc": 98.20312, "loss_bbox": 0.0692, "loss": 0.1478, "grad_norm": 1.50019, "time": 0.17453}
{"mode": "train", "epoch": 23, "iter": 150, "lr": 5e-05, "memory": 3287, "data_time": 0.00474, "loss_rpn_cls": 0.0067, "loss_rpn_bbox": 0.00986, "loss_cls": 0.05825, "acc": 98.11133, "loss_bbox": 0.0672, "loss": 0.14201, "grad_norm": 1.3925, "time": 0.17525}
{"mode": "train", "epoch": 23, "iter": 200, "lr": 5e-05, "memory": 3287, "data_time": 0.00512, "loss_rpn_cls": 0.00336, "loss_rpn_bbox": 0.00826, "loss_cls": 0.05792, "acc": 98.19141, "loss_bbox": 0.06019, "loss": 0.12972, "grad_norm": 1.25818, "time": 0.17499}
{"mode": "train", "epoch": 23, "iter": 250, "lr": 5e-05, "memory": 3287, "data_time": 0.00524, "loss_rpn_cls": 0.00503, "loss_rpn_bbox": 0.01234, "loss_cls": 0.06381, "acc": 98.01172, "loss_bbox": 0.07692, "loss": 0.1581, "grad_norm": 1.49563, "time": 0.17532}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 5e-05, "memory": 3287, "data_time": 0.05018, "loss_rpn_cls": 0.00497, "loss_rpn_bbox": 0.00935, "loss_cls": 0.05937, "acc": 98.11133, "loss_bbox": 0.06601, "loss": 0.1397, "grad_norm": 1.37395, "time": 0.22229}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 5e-05, "memory": 3287, "data_time": 0.00497, "loss_rpn_cls": 0.0049, "loss_rpn_bbox": 0.01138, "loss_cls": 0.06254, "acc": 98.08594, "loss_bbox": 0.06848, "loss": 0.1473, "grad_norm": 1.50478, "time": 0.17459}
{"mode": "train", "epoch": 24, "iter": 150, "lr": 5e-05, "memory": 3287, "data_time": 0.00443, "loss_rpn_cls": 0.00585, "loss_rpn_bbox": 0.00972, "loss_cls": 0.05603, "acc": 98.16211, "loss_bbox": 0.06612, "loss": 0.13772, "grad_norm": 1.36156, "time": 0.17432}
{"mode": "train", "epoch": 24, "iter": 200, "lr": 5e-05, "memory": 3287, "data_time": 0.00615, "loss_rpn_cls": 0.00323, "loss_rpn_bbox": 0.00816, "loss_cls": 0.05488, "acc": 98.30078, "loss_bbox": 0.05848, "loss": 0.12475, "grad_norm": 1.24505, "time": 0.17816}
{"mode": "train", "epoch": 24, "iter": 250, "lr": 5e-05, "memory": 3287, "data_time": 0.00463, "loss_rpn_cls": 0.00435, "loss_rpn_bbox": 0.01216, "loss_cls": 0.06229, "acc": 97.95117, "loss_bbox": 0.07676, "loss": 0.15555, "grad_norm": 1.48019, "time": 0.17504}
